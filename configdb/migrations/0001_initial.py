# Generated by Django 3.2.7 on 2022-09-12 22:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('avatar_url', models.CharField(max_length=255)),
                ('deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('avatar_url', models.CharField(max_length=255)),
                ('chanel_type', models.CharField(max_length=255)),
                ('deleted', models.BooleanField(default=False)),
                ('chart_placed', models.BooleanField(default=False)),
                ('rank', models.IntegerField(null=True)),
                ('subscribers', models.IntegerField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configdb.artist')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followers', models.IntegerField(null=True)),
                ('timestamp', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('published', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstagramDetail',
            fields=[
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='configdb.channel')),
                ('average_comments', models.IntegerField(null=True)),
                ('average_engagement', models.IntegerField(null=True)),
                ('average_likes', models.IntegerField(null=True)),
                ('last_post', models.DateTimeField(null=True)),
                ('comments_rank', models.IntegerField(null=True)),
                ('likes_rank', models.IntegerField(null=True)),
                ('followers_rank', models.IntegerField(null=True)),
                ('recent_shitstorm', models.BooleanField(default=False)),
                ('regular_clickbait', models.BooleanField(default=False)),
                ('regular_fsk18', models.BooleanField(default=False)),
                ('followers_last_month', models.IntegerField(null=True)),
                ('posts_last_month', models.IntegerField(null=True)),
                ('stories_last_month', models.IntegerField(null=True)),
                ('total_igtv', models.IntegerField(null=True)),
                ('total_posts', models.IntegerField(null=True)),
                ('verified', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TikTokDetail',
            fields=[
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='configdb.channel')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TwitchDetail',
            fields=[
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='configdb.channel')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TwitterDetail',
            fields=[
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='configdb.channel')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='YouTubeDetail',
            fields=[
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='configdb.channel')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostAnalytic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.DurationField(null=True)),
                ('post_type', models.CharField(max_length=255, null=True)),
                ('value', models.IntegerField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='configdb.channel')),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='configdb.post')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followers', models.CharField(max_length=255)),
                ('expected_time', models.DateTimeField()),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configdb.channel')),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('discount', models.CharField(max_length=255)),
                ('terms', models.TextField()),
                ('timestamp', models.DateTimeField()),
                ('url', models.CharField(max_length=255)),
                ('valid', models.BooleanField()),
                ('valid_until', models.DateTimeField()),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configdb.artist')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configdb.brand')),
            ],
        ),
    ]
